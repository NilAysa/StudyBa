<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>

        body {
            font-family: Arial, sans-serif;
        }

        .container {
            width: 80%;
            margin-top: 40px;
            margin-left: auto;
            margin-right: auto;
        }

        .profile-header {
            margin-bottom: 30px;
            text-align: left;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
        }

        .profile-content {
            display: flex;
            align-items: flex-start;
        }

            .profile-content img {
                max-width: 200px;
                border-radius: 10px;
                margin-right: 40px;
                border: 2px solid #ddd;
            }

        .profile-details {
            font-size: 1.1em;
        }

            .profile-details dt {
                font-weight: bold;
                margin-top: 10px;
            }

            .profile-details dd {
                margin-bottom: 10px;
            }

            .profile-details dt, .profile-details dd {
                margin-left: 0;
            }

        .session-request-button, .review-button {
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            margin-top: 10px;
            cursor: pointer;
            font-size: 16px;
            border: none;
            border-radius: 5px;
            background-color: #FFA500;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0, 0, 0, 0.4);
            padding-top: 60px;
        }

        .modal-content {
            background-color: #fefefe;
            margin: 5% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 40%;
            border-radius: 10px;
        }

        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

            .close:hover,
            .close:focus {
                color: black;
                text-decoration: none;
                cursor: pointer;
            }

        .chat-box {
            max-height: 400px;
            overflow-y: auto;
            padding: 10px;
            border-radius: 10px;
            background-color: #f9f9f9;
        }

        .chat-message {
            background-color: #e0e0e0;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
        }

        .user-message {
            background-color: #ffcccc;
            color: black;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            align-self: flex-end;
        }

        .message-input {
            width: calc(100% - 85px);
            margin-right: 5px;
            border-radius: 5px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
        }

        .send-button {
            background-color: #FFA500;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            cursor: pointer;
            font-size: 16px;
        }

            .send-button:hover {
                background-color: #FFA500;
            }

        .review-form {
            margin-top: 20px;
        }

        .review-input, .review-textarea {
            width: calc(100% - 20px);
            margin-right: 5px;
            border-radius: 5px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ddd;
        }

        .submit-review-button {
            background-color: #FFA500;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }

        .average-grade {
            font-size: 20px;
        }

        .reviews {
            margin-left: 60px;
            margin-top: 7px;
        }

            .reviews h3 {
                font-size: 18px;
            }

        .session-request-form {
            display: flex;
            flex-direction: column;
        }

            .session-request-form label {
                margin: 10px 0 5px;
            }

            .session-request-form input,
            .session-request-form textarea {
                width: 100%;
                padding: 10px;
                margin-bottom: 10px;
                border-radius: 5px;
                border: 1px solid #ddd;
            }

        .session-request-button {
            background-color: #FFA500;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px;
            cursor: pointer;
            font-size: 16px;
        }

            .session-request-button:hover {
                background-color: #e59400;
            }

    </style>
</head>
<body>
    <div class="container">
        <h1 class="profile-header">@Model.User.Username's Profile</h1>
        <div class="profile-content">
            <div>
                <img src="~/avatar/@(Model.User.Avatar).jpg" alt="Profile Picture" class="img-thumbnail" />
            </div>
            <div class="profile-details">
                <dl class="dl-horizontal">
                    <dt>First Name</dt>
                    <dd>@Model.User.FirstName</dd>
                    <dt>Last Name</dt>
                    <dd>@Model.User.LastName</dd>
                    <dt>Date of Birth</dt>
                    <dd>@Model.User.DateOfBirth.ToString("yyyy-MM-dd")</dd>
                    <dt>Email</dt>
                    <dd>@Model.User.Email</dd>
                    <dt>Contact Number</dt>
                    <dd>@Model.User.ContactNumber</dd>
                </dl>
                <button class="session-request-button" onclick="openSessionRequestModal()">Send Session Request</button>
                <button class="review-button" onclick="openReviewModal()">Add Review</button>
            </div>
            <div class="reviews">
                <p class="average-grade"><strong>Average Grade:</strong> @ViewData["AverageGrade"]</p>
                <h3><strong>Comments</strong></h3>
                <ul>
                    @foreach (var review in (List<StudyBa.Models.Review>)ViewData["Reviews"])
                    {
                        @if (!string.IsNullOrEmpty(review.Comment))
                        {
                            <li>
                                @review.Comment
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>

    <div id="sessionRequestModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeSessionRequestModal()">&times;</span>
            <h2>Send Session Request</h2>
            <form id="sessionRequestForm" class="session-request-form">
                <label for="sessionContact">Contact Info:</label>
                <input type="text" id="sessionContact" required />
                <label for="sessionSubject">Subject:</label>
                <input type="text" id="sessionSubject" required />
                <label for="sessionComment">Comment:</label>
                <textarea id="sessionComment" rows="4" placeholder="Write your comment here..."></textarea>
                <button type="submit" class="session-request-button">Send Request</button>
            </form>
        </div>
    </div>

    <div id="reviewModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeReviewModal()">&times;</span>
            <h2>Submit a Review</h2>
            <form id="reviewForm" class="review-form">
                <label for="reviewGrade">Grade (1-5):</label>
                <input type="number" id="reviewGrade" class="review-input" min="1" max="5" required />
                <label for="reviewComment">Comment:</label>
                <textarea id="reviewComment" class="review-textarea" rows="4" placeholder="Write your comment here..."></textarea>
                <button type="submit" class="submit-review-button">Submit Review</button>
            </form>
        </div>
    </div>

    <script>
        function openSessionRequestModal() {
            document.getElementById("sessionRequestModal").style.display = "block";
        }

        function closeSessionRequestModal() {
            document.getElementById("sessionRequestModal").style.display = "none";
        }

        function openReviewModal() {
            document.getElementById("reviewModal").style.display = "block";
        }

        function closeReviewModal() {
            document.getElementById("reviewModal").style.display = "none";
        }

        window.onclick = function (event) {
            var sessionRequestModal = document.getElementById("sessionRequestModal");
            var reviewModal = document.getElementById("reviewModal");
            if (event.target == sessionRequestModal) {
                closeSessionRequestModal();
            } else if (event.target == reviewModal) {
                closeReviewModal();
            }
        };

        document.getElementById("sessionRequestForm").addEventListener("submit", function (event) {
            event.preventDefault();
            var contactInfo = document.getElementById("sessionContact").value;
            var subject = document.getElementById("sessionSubject").value;
            var comment = document.getElementById("sessionComment").value;

            fetch('/TutorSubjects/SendSessionRequest', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    receiverId: @Model.User.UserId,
                    senderContact: contactInfo,
                    subject: subject,
                    message: comment
                })
            }).then(response => {
                if (response.ok) {
                    closeSessionRequestModal();
                    alert('Session request sent successfully.');
                } else {
                    alert('Failed to send session request.');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('An error occurred while sending the session request.');
            });
        });

        document.getElementById("reviewForm").addEventListener("submit", function (event) {
            event.preventDefault();
            var grade = document.getElementById("reviewGrade").value;
            var comment = document.getElementById("reviewComment").value;

            fetch('/TutorSubjects/AddReview', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + localStorage.getItem('jwtToken')
                },
                body: JSON.stringify({
                    tutorId: @Model.User.UserId,
                    grade: grade,
                    comment: comment
                })
            }).then(response => {
                if (response.ok) {
                    closeReviewModal();
                    alert('Review submitted successfully.');
                } else {
                    alert('Failed to submit review.');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('An error occurred while submitting the review.');
            });
        });
    </script>
</body>
</html>
